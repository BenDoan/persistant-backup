#!/usr/bin/env python

import subprocess, re, datetime, pickle
import RSyncBackup

from subprocess import Popen

now = datetime.datetime.now()


targets = [
    {
        'user':'ben',
        'ip':'192.168.1.111',
        'destination':"/home/ben/code/persistant-backup/backup/{}-{}-{}-{}-{}-{}".format(now.year, now.month, now.day, now.hour, now.minute, now.second),
        'source':"/home/ben/code/persistant-backup/docs",
        'archive':"/home/ben/code/persistant-backup/backup/archive/"
    }
]

try:
    missed_backups = pickle.load(open('missed.p', 'rb'))
    print(missed_backups)
except Exception:
    missed_backups = []

def is_host_up(ip):
    ping_response = Popen(["/bin/ping", "-c1", "-w1", "-q", ip], stdout=subprocess.PIPE).stdout.read()
    return re.search(b"100% packet loss", ping_response) is None

def backup_host(target):
    backup = RSyncBackup.RSyncBackup(rsync='/usr/bin/rsync', lastRunFile='backup.lrf')
    backup.backup(source=target['user'] + "@" + target['ip'] + ":" + target['source'], destination=target['destination'])
    backup.finish()

def persistant_backup():
    persisted_backups = []
    for target in missed_backups:
        if is_host_up(target['ip']):
            backup_host(target)
        else:
            persisted_backups.append(target)
    pickle.dump(persisted_backups, open('missed.p', 'wb'))

def daily_backup():
    missed_backups = []
    for target in targets:
        if is_host_up(target['ip']):
            backup_host(target)
        else:
            missed_backups.append(target)
    pickle.dump(missed_backups, open('missed.p', 'wb'))

persistant_backup()
